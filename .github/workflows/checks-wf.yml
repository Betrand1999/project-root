# name: Secret Scan

# on:
#   pull_request:
#     branches: [ "*" ]
#   push:
#     branches: [ "*" ]

# jobs:
#   gitleaks-scan:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # optional - for full commit history scanning

#       - name: Run Gitleaks
#         uses: zricethezav/gitleaks-action@v1.3.0
#         with:
#           args: "--repo-path=. --commit-history --verbose --redact --report=gitleaks-report.json"

#       - name: Debug Files
#         run: ls -la

#       - name: Print Gitleaks Report
#         run: |
#           echo "=== Gitleaks JSON Report ==="
#           cat gitleaks-report.json
          
name: Secret Scan

on:
  pull_request:
    branches: [ "*" ]
  push:
    branches: [ "*" ]

jobs:
  gitleaks-scan:
    runs-on: ubuntu-latest
    steps:
      # 1) Check out the code
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full commit history if you want to scan all commits

      # 2) Install Gitleaks (v8.23.1 as an example)
      - name: Install Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.23.1/gitleaks_8.23.1_linux_x64.tar.gz \
            | tar -zx && sudo mv gitleaks /usr/local/bin/

      # 3) Run Gitleaks
      - name: Run Gitleaks
        run: |
          # --exit-code=1 ensures the job fails if secrets are found
          gitleaks detect \
            --source . \
            --report-format=json \
            --report-path=gitleaks-report.json \
            --exit-code=1 \
            --redact

      # 4) Debug: list files to ensure the JSON report is present
      - name: Debug Files
        run: ls -la

      # 5) Print the JSON report in logs
      - name: Print Gitleaks Report
        run: |
          echo "=== Gitleaks JSON Report ==="
          cat gitleaks-report.json



# The Action itself includes the Gitleaks binary.
# GitHub Actions pulls that environment automatically.